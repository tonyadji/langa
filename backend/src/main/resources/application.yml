spring:
  application:
    name: ${APP_NAME}
  data:
    mongodb:
      uri: ${MONGODB_URI}
  servlet:
    multipart:
      max-file-size: ${MULTIPART_MAX_FILE_SIZE}
      max-request-size: ${MULTIPART_MAX_REQUEST_SIZE}
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH}
          starttls:
            enable: ${MAIL_STARTTLS_ENABLE}
            required: ${MAIL_STARTTLS_REQUIRED}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET}
      key-deserializer: ${KAFKA_KEY_DESERIALIZER}
      value-deserializer: ${KAFKA_VALUE_DESERIALIZER}
      enable-auto-commit: ${KAFKA_ENABLE_AUTO_COMMIT}
      properties:
        spring.json.trusted.packages: ${KAFKA_TRUSTED_PACKAGES}
    listener:
      ack-mode: ${KAFKA_LISTENER_ACK_MODE}

server:
  port: ${SERVER_PORT}
  tomcat:
    max-http-form-post-size: ${TOMCAT_MAX_FORM_POST_SIZE}

application:
  agent-version: ${AGENT_VERSION}
  base-url: ${BASE_URL}
  persistence:
    provider: ${PERSISTENCE_PROVIDER}
  security:
    jwt.secret: ${JWT_KEY}
    jwt.kid: ${JWT_KID}
    jwt.expiration: ${JWT_EXPIRATION}
    jwt.refresh-token.expiration: ${JWT_REFRESH_TOKEN_EXPIRATION}
    endpoints:
      unsecured:
        - ${SECURITY_UNSECURED_ENDPOINTS}
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS}
      allowed-methods: ${CORS_ALLOWED_METHODS}
      allowed-headers: ${CORS_ALLOWED_HEADERS}
      allow-credentials: ${CORS_ALLOW_CREDENTIALS}
      pattern-registry: ${CORS_PATTERN_REGISTRY}
  mail:
    provider: ${MAIL_PROVIDER}

logging:
  level:
    org.springframework.web: ${LOG_LEVEL_SPRING_WEB}
    org.springframework.security: ${LOG_LEVEL_SPRING_SECURITY}
    com.langa: ${LOG_LEVEL_LANGA}